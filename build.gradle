// vim: ts=2 sw=2:
apply plugin: 'idea'
defaultTasks 'compileGroovy', 'jar'

subprojects {
  apply plugin: 'groovy'
  apply plugin: 'osgi'
  apply plugin: 'idea'
  project.ext {
    sourceDir = 'src'
    testDir   = 'test'
    buildDir  = 'build'
  }
  repositories {
    mavenCentral()
    maven {
      url 'http://code.cytoscape.org/nexus/content/repositories/releases/'
    }
  }
  configurations {
    provided
  }
  sourceSets {
    main { compileClasspath += configurations.provided }
  }
  idea {
    module {
      scopes.PROVIDED.plus += configurations.provided
    }
  }
  sourceSets {
    main {
      groovy { srcDirs = [project.ext.sourceDir] }
      resources { srcDir 'resources' }
      output.classesDir = "$project.ext.buildDir/classes"
      output.resourcesDir = "$project.ext.buildDir/resources"
    }
    test {
      groovy { srcDirs = [project.ext.testDir] }
      resources { srcDir 'test-resources' }
      output.classesDir = "$project.ext.buildDir/test-classes"
    }
  }
  dependencies {
    provided fileTree(dir: "$System.env.PLUGIN_CY3_LIBS_DIR/org/cytoscape", include: '**/*.jar')
    provided fileTree(dir: "$System.env.PLUGIN_CY3_LIBS_DIR/org/eclipse/osgi", include: '**/*.jar')
  }
}

project('modules/common') {
  dependencies {
    compile files(
      "$rootDir/libs/compile/groovy-all-2.1.6.jar",
      "$rootDir/libs/compile/slf4j-api-1.7.5.jar")
    testCompile files(
      "$rootDir/libs/test/junit-4.11.jar")
  }

  jar {
    baseName = 'kamnav-common'
    version = '1.0.0'
    manifest {
      classesDir = sourceSets.main.output.classesDir
      classpath = sourceSets.main.runtimeClasspath
      version = '1.0.0'
      name = 'OpenBEL KamNav - Common'
      symbolicName = 'org.openbel.kamnav.common'
      instruction 'Import-Package', '''
        groovy.lang;version="[2.1,3)",
        groovy.transform;version="[2.1,3)",
        groovy.util.slurpersupport;version="[2.1,3)",
        org.codehaus.groovy.reflection;version="[2.1,3)",
        org.codehaus.groovy.runtime;version="[2.1,3)",
        org.codehaus.groovy.runtime.callsite;version="[2.1,3)",
        org.codehaus.groovy.runtime.typehandling;version="[2.1,3)",
        org.slf4j;version="[1,2)",
        sun.reflect
      '''
      instruction 'Export-Package', '''
        org.openbel.kamnav.common,
        org.openbel.kamnav.common.extensions,
        org.openbel.kamnav.common.model
      '''
    }
  }
}

project('modules/core') {
  dependencies {
    compile project(':modules/ws')
    compile files(
      "$rootDir/libs/compile/groovy-all-2.1.6.jar",
      "$rootDir/libs/compile/slf4j-api-1.7.5.jar")
    testCompile files(
      "$rootDir/libs/test/junit-4.11.jar")
  }

  jar {
    baseName = 'kamnav-core'
    version = '1.0.0'
    manifest {
      classesDir = sourceSets.main.output.classesDir
      classpath = sourceSets.main.runtimeClasspath
      version = '1.0.0'
      name = 'OpenBEL KamNav - Core'
      symbolicName = 'org.openbel.kamnav.core'
      instruction 'Import-Package', '''
        groovy.lang;version="[2.1,3)",
        groovy.transform;version="[2.1,3)",
        org.codehaus.groovy.reflection;version="[2.1,3)",
        org.codehaus.groovy.runtime;version="[2.1,3)",
        org.codehaus.groovy.runtime.callsite;version="[2.1,3)",
        org.codehaus.groovy.runtime.typehandling;version="[2.1,3)",
        org.cytoscape.application;version="[3,4)",
        org.cytoscape.model;version="[3,4)",
        org.cytoscape.service.util;version="[3,4)",
        org.cytoscape.task;version="[3,4)",
        org.cytoscape.view.model;version="[3,4)",
        org.cytoscape.work;version="[3,4)",
        org.cytoscape.work.util;version="[3,4)",
        org.openbel.ws.api,
        org.osgi.framework,
        org.slf4j;version="[1,2)",
        sun.reflect
      '''
      instruction 'Bundle-Activator', 'org.openbel.kamnav.core.Activator'
      instruction 'Export-Package', 'org.openbel.kamnav.core'
    }
  }
}

project('modules/main') {
  dependencies {
    compile files(
      "$rootDir/libs/compile/groovy-all-2.1.6.jar",
      "$rootDir/libs/compile/slf4j-api-1.7.5.jar")
    testCompile files(
      "$rootDir/libs/test/junit-4.11.jar")
  }

  jar {
    baseName = 'kamnav-main'
    version = '1.0.0'
    manifest {
      classesDir = sourceSets.main.output.classesDir
      classpath = sourceSets.main.runtimeClasspath
      version = '1.0.0'
      name = 'OpenBEL KamNav - Main'
      symbolicName = 'org.openbel.kamnav.main'
      instruction 'Import-Package', '''
        groovy.lang;version="[2.1,3)",
        groovy.swing;version="[2.1,3)",
        groovy.util;version="[2.1,3)",
        javax.accessibility,
        javax.swing,
        javax.swing.border,
        javax.swing.event,
        javax.swing.plaf,
        org.codehaus.groovy.reflection;version="[2.1,3)",
        org.codehaus.groovy.runtime;version="[2.1,3)",
        org.codehaus.groovy.runtime.callsite;version="[2.1,3)",
        org.codehaus.groovy.runtime.wrappers;version="[2.1,3)",
        org.cytoscape.application.swing;version="[3,4)",
        org.cytoscape.service.util;version="[3,4)",
        org.osgi.framework,
        org.slf4j;version="[1,2)",
        sun.awt,
        sun.java2d.pipe,
        sun.reflect
      '''
      instruction 'Bundle-Activator', 'org.openbel.kamnav.main.Activator'
      instruction 'Export-Package', ''
    }
  }
}

project('modules/ui') {
  dependencies {
    compile files(
      "$rootDir/libs/compile/groovy-all-2.1.6.jar",
      "$rootDir/libs/compile/slf4j-api-1.7.5.jar")
    testCompile files(
      "$rootDir/libs/test/junit-4.11.jar")
  }

  jar {
    baseName = 'kamnav-ui'
    version = '1.0.0'
    manifest {
      classesDir = sourceSets.main.output.classesDir
      classpath = sourceSets.main.runtimeClasspath
      version = '1.0.0'
      name = 'OpenBEL KamNav - UI'
      symbolicName = 'org.openbel.kamnav.ui'
      instruction 'Import-Package', '''
        groovy.lang;version="[2.1,3)",
        groovy.swing;version="[2.1,3)",
        groovy.util;version="[2.1,3)",
        javax.accessibility,
        javax.swing,
        javax.swing.border,
        javax.swing.event,
        javax.swing.plaf,
        org.codehaus.groovy.reflection;version="[2.1,3)",
        org.codehaus.groovy.runtime;version="[2.1,3)",
        org.codehaus.groovy.runtime.callsite;version="[2.1,3)",
        org.codehaus.groovy.runtime.wrappers;version="[2.1,3)",
        org.cytoscape.application.swing;version="[3,4)",
        org.slf4j;version="[1,2)",
        sun.awt,
        sun.java2d.pipe,
        sun.reflect
      '''
      instruction 'Export-Package', 'org.openbel.kamnav.ui'
    }
  }
}

project('modules/ws') {
  dependencies {
    compile project(':modules/common')
    compile files(
      "$rootDir/libs/compile/groovy-all-2.1.6.jar",
      "$rootDir/libs/compile/groovy-common-extensions-0.5.jar",
      "$rootDir/libs/compile/groovy-wslite-0.8.0.jar",
      "$rootDir/libs/compile/slf4j-api-1.7.5.jar")
    testCompile files(
      "$rootDir/libs/test/junit-4.11.jar")
  }

  jar {
    baseName = 'kamnav-ws'
    version = '1.0.0'
    manifest {
      classesDir = sourceSets.main.output.classesDir
      classpath = sourceSets.main.runtimeClasspath
      version = '1.0.0'
      name = 'OpenBEL KamNav - Ws'
      symbolicName = 'org.openbel.kamnav.ws'
      instruction 'Import-Package', '''
        groovy.lang;version="[2.1,3)",
        org.codehaus.groovy.reflection;version="[2.1,3)",
        org.codehaus.groovy.runtime;version="[2.1,3)",
        org.codehaus.groovy.runtime.callsite;version="[2.1,3)",
        org.cytoscape.service.util;version="[3,4)",
        org.openbel.kamnav.common.model,
        org.openbel.ws.api,
        org.osgi.framework,
        org.slf4j;version="[1,2)",
        wslite.soap,
        sun.reflect
      '''
      instruction 'Bundle-Activator', 'org.openbel.ws.Activator'
      instruction 'Export-Package', 'org.openbel.ws.api'
    }
  }
}
